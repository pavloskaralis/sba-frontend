{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/button/button.component.ts","webpack:///src/app/button/button.component.html","webpack:///src/app/content/content.component.ts","webpack:///src/app/content/content.component.html","webpack:///src/app/dictionary.service.ts","webpack:///src/app/popup/popup.component.ts","webpack:///src/app/popup/popup.component.html","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/app/suggestion/suggestion.component.ts","webpack:///src/app/suggestion/suggestion.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ButtonComponent","click","emit","ContentComponent","dictionary","preload","fullScreen","content","wordcount","response","word","suggestions","misspelled","misspellings","ignored","loading","popup","setContent","setTimeout","console","log","contentBodyContainer","nativeElement","textContent","noTrim","replace","lastChar","split","length","charCodeAt","trim","splitContent","setWordCount","request","checkContent","subscribe","configuredResponse","configureResponse","filter","result","status","message","check","error","createResult","i","lastLoop","lastIndex","exceptLast","slice","push","indexOf","textarea","document","createElement","value","body","appendChild","select","execCommand","removeChild","addEventListener","keyCode","preventDefault","returnValue","eraseContent","event","paste","clipboardData","getData","selection","window","getSelection","rangeCount","deleteFromDocument","getRangeAt","insertNode","createTextNode","empty","resize","onChange","copyContent","DictionaryService","http","url","put","post","providedIn","PopupComponent","closeRequest","next","close","SpinnerComponent","SuggestionComponent","ignoreRequest","setRequest","other","overflowRight","overflowBottom","dropdown","checkOverflow","otherInput","suggestionContainer","contains","target","toggleDropdown","querySelector","getElementById","dropdownID","borders","getBoundingClientRect","rightBorder","bottomBorder","positions","rightPosition","bottomPosition","original","original_length","replacement","replacement_length","addSelection","suggestion","setTittle","wordID","updateWord","otherChange","host","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'spa-client';\n}\n","<div class=\"app\">\n  <content></content>\n</div> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './content/content.component';\nimport { ButtonComponent } from './button/button.component';\nimport { SuggestionComponent } from './suggestion/suggestion.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { PopupComponent } from './popup/popup.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    ButtonComponent,\n    SuggestionComponent,\n    SpinnerComponent,\n    PopupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() buttonType: string;\n  @Output() click = new EventEmitter<string>();\n\n  callParent(): void {\n    this.click.emit();\n  }\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<ng-container *ngTemplateOutlet=\"buttonType['check'] ? check : buttonType['copy'] ? copy : erase\">\n</ng-container>\n\n<ng-template #check>\n    <div class=\"button\" [class]=\"buttonType\">\n        {{ buttonType }}\n    </div>\n</ng-template>\n    \n<ng-template #copy>\n    <div class=\"button\" [class]=\"buttonType\">\n        {{ buttonType }}\n    </div>\n</ng-template>\n\n    \n<ng-template #erase>\n    <div class=\"button\" [class]=\"buttonType\">\n        {{ buttonType }}\n    </div>\n</ng-template>\n    ","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DictionaryService } from '../dictionary.service';\nimport { last } from 'rxjs/operators';\n\n@Component({\n  selector: 'content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent implements OnInit {\n  //prevents animations on page load\n  preload: boolean = true; \n  fullScreen: boolean = false; \n  //reconfigured text content\n  content: string = \" \";\n  //stores pre-response values for response configuration and misspelled value change check; also used to set word count\n  splitContent: any[]; //string and regex\n  //last character of unconfigured response for checking value changes of misspelled words\n  lastChar: any; //string and regex\n  wordcount: number = 0; \n  //configured response of results from api\n  response: { word: string, suggestions: string[], misspelled: boolean }[] = [\n    {word: \"\", suggestions: [], misspelled: false}\n  ]; \n  //all misspelled results for checking value changes of misspelled words\n  misspellings:{ word: string, suggestions: string[], misspelled: boolean }[] = [];  \n  //stores all ignored\n  ignored: string[] = [];  \n  //loading state boolean\n  loading: boolean = false;\n  //pop up toggle for no misspellings and clipboard copied\n  popup: boolean = false; \n  //message for popup\n  status: {message: string, check: boolean};\n  //track keydown for select all delete\n  keys: number[] = [];\n\n  @ViewChild(\"contentBodyContainer\") contentBodyContainer: ElementRef;\n  \n  //resize button\n  resize() {\n    this.fullScreen = !this.fullScreen;\n  }\n  //tracks user input to body content\n  onChange() {\n    this.setContent();\n    // setTimeout(()=> this.checkMisspelledChange(), 0);\n  \n  }\n\n  //set content buffer for suggestion submit emit or manual user change\n  buffer() {\n\n    setTimeout( ()=> this.setContent(), 0);\n  }\n  //configure text content for api request\n  setContent () {\n    console.log(\"Live:\",this.contentBodyContainer.nativeElement.textContent)\n    let noTrim = this.contentBodyContainer.nativeElement.textContent.replace(/Suggestions.+?[^(Found)](Ignore|Submit)/,\"\").replace(/No\\sSuggestions.+?(FoundIgnore|FoundSubmit)/g,\"\");\n    this.lastChar = noTrim.split(\"\")[noTrim.length -1].charCodeAt(0);\n    this.content = noTrim.trim().replace(/\\u00A0/g,\"\").replace(/\\s{2,}/g,\" \");\n    console.log(\"set:\", this.content)\n    this.splitContent = this.content.split(/\\s+/);\n    // console.log(\"split\",this.splitContent);\n    this.setWordCount();\n  }\n\n  setWordCount() {\n    this.splitContent[0] === \"\" ? this.wordcount = 0 : this.wordcount = this.splitContent.length;\n  }\n  \n  //check button api call\n  checkContent () {\n    //configure to empty stay\n    this.popup = false;\n    this.loading = true;\n    let request = {content: this.content}\n    // console.log(\"request\",this.content)\n    this.dictionary.checkContent(request)\n      .subscribe( response => {\n          // console.log(\"raw response\", response[\"results\"])\n          let configuredResponse = this.configureResponse(response[\"results\"]);\n          setTimeout(()=> {\n            this.response = configuredResponse;\n            this.setContent();\n            // console.log(\"configured response\", this.response)\n            this.misspellings = this.response.filter(result => result.misspelled);\n            this.loading = false; \n            if(this.misspellings.length === 0) {\n              this.popup = true;\n              this.status = {message: \"No Misspellings Found\", check: true};\n            }\n          },0);\n      }, (error: Response) => {\n        if(error.status === 404) {\n          console.log(error.status)\n        } else if (error.status === 400) {\n          console.log(error.status)\n        } else {\n          console.log(error.status)\n        }\n      })\n  }\n\n  configureResponse(response) {\n    //re-add punctuation and spaces\n    let configuredResponse = [];\n    let createResult = word => {return {word: word, suggestions: [], misspelled: false}};\n    //re-add spacing and any removed characters from plural to singular conversion by api\n    for(let i = 0; i < response.length; i++) {\n      let lastLoop = response.length - 1;\n      let result = response[i];\n      let request = this.splitContent[i];\n      let lastIndex = request.split(\"\").length - 1;\n      let lastChar = request.split(\"\")[lastIndex];\n      let exceptLast = request.slice(0,request.length - 1);\n      //if result word exactly matches request word directly add it\n      if(result.word === request){\n        configuredResponse.push(result);\n       //otherwise (because of api plural swap)\n      } else {\n        //if all but the last characters match\n        if(result.word.slice(0,result.word.length - 1) === exceptLast) {\n          result.word += lastChar;\n          configuredResponse.push(result);\n        // } else if(/[.,;!?:]/.test(lastChar) && result.misspelled) {\n        //     result.word = request.slice(0,lastIndex);\n        //     configuredResponse.push(result);\n        //     configuredResponse.push(createResult(lastChar));\n        //     // console.log(\"configured\",configuredResponse)\n          } else {\n            result.word = request;\n            configuredResponse.push(result);\n        }\n      }\n      //don't consider ignored words as misspelled\n      if(this.ignored.indexOf(result.word) !== -1) result.misspelled = false; \n      //add space between words except for end\n      if(result.misspelled) configuredResponse.push(createResult(\"\"));\n    }\n\n    return configuredResponse;\n  }\n\n  addIgnored (ignored) {\n    // console.log(\"ignore received\")\n    this.ignored.push(ignored)\n  }\n\n  //old method\n  // checkMisspelledChange () {\n  //   // console.log(\"original response\",this.response)\n  //   for(let i = 0; i < this.misspellings.length; i++){\n  //     let misspelled = this.misspellings[i].word;\n  //     let contentIndex = this.splitContent.indexOf(misspelled);\n  //     let lastSplitIndex = this.splitContent.length - 1; \n  //     let responseIndex = this.response.findIndex(result => result.word === misspelled);\n  //     // console.log(\"before change\",misspelled,this.splitContent)\n  //     //if misspelled word no longer exists in content due to character change or if last input was a space and misspelled word is the last word of content\n  //     if(contentIndex === -1 || (this.lastChar === 115 || this.lastChar === 160) && (misspelled === this.splitContent[lastSplitIndex])) {\n  //       this.misspellings.splice(i,1);\n  //       this.response[responseIndex].misspelled = false;\n  //       this.buffer();        \n  //       // console.log(\"Changed\",misspelled,this.splitContent)\n  //     }\n  //     // console.log(\"here\",this.response[responseIndex],this.response[responseIndex+1], this.response)\n  // }\n// }\n  //copy button\n  copyContent () {\n    let textarea = document.createElement(\"textarea\")\n    textarea.value = this.content;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    this.popup = true;\n    this.status = {message: \"Copied To Clipboard\", check: false};\n  }\n\n  //erase button\n  eraseContent() {\n    this.response = [{word: \" \", suggestions: [], misspelled: false}];\n    this.popup = false; \n    this.misspellings= [];\n    this.ignored = [];\n    setTimeout(()=> this.setContent(), 0); \n  }\n\n  closePopup() {\n    this.popup = false;\n  }\n\n  constructor(private dictionary: DictionaryService) {}\n\n\n  ngOnInit(): void {\n     //prevents content-editable from deleting innerHTML formatting\n    document.addEventListener(\"keydown\", (e)=>{\n      \n      switch(this.keys.length) {\n        case 0: if(this.keys.length === 0 && (e.keyCode === 224 || e.keyCode === 91 || e.keyCode === 17)) this.keys.push(e.keyCode);\n        break;\n        case 1: this.keys.length === 1 && e.keyCode === 65 ? this.keys.push(e.keyCode) : this.keys = [];\n        break;\n        case 2: this.keys.length === 2 && (e.keyCode === 46 || e.keyCode === 8) ? this.keys.push(e.keyCode) : this.keys = [];\n      }\n     \n      // console.log(e.keyCode)\n      // console.log(\"keys\",this.keys,this.keys.length,e.keyCode)\n      if ((e.keyCode === 46 || e.keyCode === 8)&& this.content.length < 1) {\n        // console.log(\"blocked\")\n          if (e.preventDefault) {\n            e.preventDefault();\n          } else {\n            e.returnValue = false;\n          }\n      } else if ((e.keyCode === 46 || e.keyCode === 8) && this.keys.length === 3) {\n        // console.log(\"switched\")\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n        this.eraseContent();\n        this.keys = [];\n      }\n      //format text on paste\n      document.addEventListener(\"paste\", (event) => {\n          let paste = (event.clipboardData).getData('text');\n  \n          const selection = window.getSelection();\n          if (!selection.rangeCount) return false;\n          selection.deleteFromDocument();\n          selection.getRangeAt(0).insertNode(document.createTextNode(paste));\n          event.preventDefault();\n\n          this.setContent();\n          selection.empty();\n          // let id = \"last\";\n          // console.log(\"element\", document.getElementById(id),id)\n          // document.getElementById(id).focus()\n        });\n    });\n      //required to avoid initial animation for resize button transition \n    setTimeout(\n      ()=> {\n        this.preload = false;     \n    },500)\n  }\n\n}\n","<div class=\"content-container content-container-shrink\" [class.preload]=\"preload\" [class]=\"fullScreen ? 'content-container-grow' : 'content-container-shrink'\">\n    <div class=\"content-header\" [class.inner-content-full]=\"fullScreen\">\n        <div class=\"header-title\">SBA Spell Checker</div>\n        <div class=\"resize-container\">\n            <div class=\"resize-button\" (click)=\"resize()\"></div>\n        </div>\n    </div>\n    <popup *ngIf=\"popup\" [status]=\"status\" (closeRequest)=\"closePopup()\"></popup>\n    <spinner *ngIf=\"loading\"></spinner>\n    <div autoFocus id=\"content-body\" class=\"content-body-container\">\n        <div #contentBodyContainer class=\"content-body\" [class.disabled-content]=\"loading\" (input)=\"onChange()\" contenteditable spellcheck=\"false\">\n            <ng-container *ngFor=\"let result of response; let index = index\">\n                <suggestion *ngIf=\"result.misspelled\" [result]=\"result\"  [wordID]=\"index\" (ignoreRequest)=\"addIgnored(result.word)\" (setRequest)=\"buffer()\">  </suggestion>\n\n                <span *ngIf=\"!result.misspelled\" class=\"correct-container\">\n                    <div class=\"correct-spelling\" ng-bind-html=\"&nbsp;\" >\n                        {{ index !== response.length - 1 && response[index + 1].word !== \"\" ? result.word + \"&nbsp;\" : result.word }}\n                        <br *ngIf=\"index === response.length - 1 && result.word === '' \"/>\n                    </div> \n                </span>      \n            </ng-container>\n        </div>\n    </div>\n    <div class=\"content-footer\" [class.inner-content-full]=\"fullScreen\">\n        <div class=\"word-count\">Word Count: {{ wordcount }}</div>\n        <div class=\"button-container\" [class.disabled-buttons]=\"loading\">\n            <div class=\"button-wrap\">\n                <app-button [buttonType]=\"'check'\" (click)=\"checkContent()\"></app-button>\n            </div>\n            <div class=\"button-wrap\">\n                <app-button [buttonType]=\"'copy'\" (click)=\"copyContent()\" ></app-button>\n            </div>\n            <div class=\"button-wrap\">\n                <app-button [buttonType]=\"'erase'\" (click)=\"eraseContent()\" ></app-button>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictionaryService {\n  private url = 'https://sba-spell-checker-api.herokuapp.com/'\n\n  constructor(private http: HttpClient) { }\n\n  checkContent (request) {\n    return this.http.put(this.url, request);\n  }\n\n  addSelection (request) {\n    return this.http.post(this.url, request)\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'popup',\n  templateUrl: './popup.component.html',\n  styleUrls: ['./popup.component.scss']\n})\nexport class PopupComponent implements OnInit {\n  @Input()\n  status: {message: string, check: boolean};\n  @Output()\n  closeRequest = new EventEmitter<boolean>(); \n\n  constructor() { }\n\n  close() {\n    this.closeRequest.next();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"popup-container\" [class.check-message]=\"status.check\" [class.copy-message]=\"!status.check\">\n    <div class=\"message-wrap\">\n        {{ status.message }}\n    </div>\n    <div class=\"button-wrap\">\n        <div class=\"button\" (click)=\"close()\">x</div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner-container\">\n    <div class=\"lds-spinner\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n</div>  \n  ","import { Component, OnInit, Input, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { DictionaryService } from '../dictionary.service';\n\n@Component({\n  host: {\n    '(document:click)': 'dropdownOffClick($event)',\n  },\n  selector: 'suggestion',\n  templateUrl: './suggestion.component.html',\n  styleUrls: ['./suggestion.component.scss']\n})\nexport class SuggestionComponent implements OnInit {\n  @Input() \n  result: { word: string, suggestions: string[], misspelled: boolean };\n  //sets id of misspelled word to check if changed\n  @Input() \n  wordID: string;\n  //other field of dropdown\n  @Input()\n  otherInput: string;\n  //signals to parent to add word to ignored array\n  @Output() \n  ignoreRequest = new EventEmitter<boolean>();\n  //signals to parent to recheck content\n  @Output() \n  setRequest = new EventEmitter<boolean>();\n  //sets id of dropdown to check if overflowing\n  dropdownID: string; \n  //title default; changes if no suggestions are found\n  title: string = \"Suggestions\";\n  //tracks user input in other field of dropdown\n  other: boolean = false;\n  //toggles position of dropdown when overflowing\n  overflowRight: boolean = false;\n  overflowBottom: boolean = false;\n  //toggles dropdown visibility\n  dropdown: boolean = false;\n  //tracks ignored for database\n\n  @ViewChild(\"suggestionContainer\") suggestionContainer: ElementRef; \n  // @ViewChild(\"misspelledWord\") misspelledWord: ElementRef; \n\n  //on init checks for suggestions\n  setTittle(){\n    if(this.result.suggestions && this.result.suggestions.length < 1) this.title = \"No Suggestions Found\";\n  }\n\n  toggleDropdown(event) {\n    event.preventDefault(); \n    this.dropdown = !this.dropdown;\n    this.dropdown? this.checkOverflow() : ()=> {this.overflowRight=false; this.overflowBottom=false}; \n    this.other = false;\n    this.otherInput = \"\";\n  }\n\n  //allows offclick toggle of dropdown\n  dropdownOffClick(event) {\n    if (this.suggestionContainer && !this.suggestionContainer.nativeElement.contains(event.target)) { // or some similar check\n      if(this.dropdown) {\n        this.toggleDropdown(event); \n      }\n    }\n  }\n\n  //realigns dropdown if overflowing\n  checkOverflow () { \n    let content = document.querySelector('.content-container');\n    let dropdown = document.getElementById(this.dropdownID);\n\n    setTimeout(() => {\n    \n      let borders = content.getBoundingClientRect();\n      let rightBorder = borders[\"right\"];\n      let bottomBorder = borders[\"bottom\"];\n\n      let positions = dropdown.getBoundingClientRect();\n      let rightPosition = positions[\"right\"];\n      let bottomPosition = positions[\"bottom\"];\n\n      let overflowRight = rightBorder - rightPosition;\n      let overflowBottom = bottomBorder - bottomPosition;\n  \n      if(overflowRight < 0) this.overflowRight = true;   \n      if(overflowBottom < 0) this.overflowBottom = true;   \n\n    },0); \n  } \n\n  //ignore button of dropdown; sends selection to database\n  ignore() {\n    this.result.misspelled = false; \n    this.ignoreRequest.next();\n    let request = {\n      original: this.result.word,\n      original_length: this.result.word.length,\n      replacement: \"\",\n      replacement_length: 0,\n      ignored: true\n    }\n    this.addSelection(request);\n  }\n\n   //tracks user input of other suggestion\n   otherChange() {\n    this.otherInput ? this.other = true : this.other = false;\n    // console.log(this.otherInput)\n  }\n\n    \n\n  //when user clicks provided suggestion or inputs their own; provides selection to database\n  updateWord(suggestion) {\n    let request = {\n      original: this.result.word,\n      original_length: this.result.word.length,\n      replacement: suggestion,\n      replacement_length: suggestion.length,\n      ignored: false\n    }\n    this.addSelection(request);\n    this.result.word = suggestion; \n    this.result.misspelled = false; \n    // setTimeout(()=>{\n    this.setRequest.next()\n      console.log(\"request sent\")\n    // });\n  }\n\n \n  //sends user's selection to database for any future relational table implementation\n  addSelection(request) {\n    // console.log(\"raw request\", request)\n    // JSON.stringify(request);\n    // this.dictionary.addSelection(request)\n    //   .subscribe( response => {\n    //     // console.log(\"added selection:\",response)\n    //   }, (error: Response) => {\n    //     if(error.status === 404) {\n    //       console.log(error.status)\n    //     } else if (error.status === 400) {\n    //       console.log(error.status)\n    //     } else {\n    //       console.log(error.status)\n    //     }\n    //   })\n  }\n\n  constructor(private dictionary: DictionaryService) { }\n\n  ngOnInit(): void {\n    this.setTittle();\n    this.dropdownID = this.wordID + \"dropdown\";\n\n  }\n\n\n}\n","<span [class.dropdown-z-index]=\"dropdown\">\n    <span #suggestionContainer [class.dropdown-z-index]=\"dropdown\" contenteditable class=\"suggestion-container\">\n        <div [id]=\"wordID\" class=\"misspelling\" (click)=\"toggleDropdown($event)\" contenteditable=\"false\">\n                {{ result.word }}\n        </div> \n        <div [class.dropdown-active]=\"dropdown\" class=\"dropdown-container\" contenteditable=\"false\" [class.dropdown-right-overflow]=\"overflowRight\" [class.dropdown-bottom-overflow]=\"overflowBottom\">\n            <div class=\"dropdown-fill\" (click)=\"toggleDropdown($event)\"></div>\n            <div [id]=\"dropdownID\" class=\"dropdown-body\">\n                <div class=\"dropdown-title\">{{ title }}</div>\n                <div class=\"dropdown-suggestion\" *ngFor=\"let suggestion of result.suggestions\" (click)=\"updateWord(suggestion)\"> {{suggestion}} </div>\n                <input [(ngModel)]=\"otherInput\" (keydown.enter)=\"updateWord(otherInput)\" (input)=\"otherChange()\" placeholder=\"Other (Enter Text)\" class=\"dropdown-other\"/>\n                <div *ngIf=\"!other\" class=\"dropdown-ignore\" (click)=\"ignore()\">Ignore</div>\n                <div *ngIf=\"other\" class=\"dropdown-ignore\" (click)=\"updateWord(otherInput)\">Submit</div>\n            </div>\n        </div>\n    </span>       \n</span>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}